<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="9" passed="6" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-02T06:06:36Z" name="Practice Suite" finished-at="2024-07-02T06:06:36Z" duration-ms="452">
    <groups>
      <group name="negative">
        <method signature="TestOne.testDivideByZero()[pri:0, instance:com.epam.test.TestOne@59d016c9]" name="testDivideByZero" class="com.epam.test.TestOne"/>
        <method signature="TestOne.testSquareRootWithNegativeVal()[pri:0, instance:com.epam.test.TestOne@59d016c9]" name="testSquareRootWithNegativeVal" class="com.epam.test.TestOne"/>
      </group> <!-- negative -->
      <group name="positive">
        <method signature="TestOne.testAdd()[pri:0, instance:com.epam.test.TestOne@59d016c9]" name="testAdd" class="com.epam.test.TestOne"/>
        <method signature="TestOne.testDivide()[pri:0, instance:com.epam.test.TestOne@59d016c9]" name="testDivide" class="com.epam.test.TestOne"/>
        <method signature="TestOne.testMultiply()[pri:0, instance:com.epam.test.TestOne@59d016c9]" name="testMultiply" class="com.epam.test.TestOne"/>
        <method signature="TestOne.testSquareRoot()[pri:0, instance:com.epam.test.TestOne@59d016c9]" name="testSquareRoot" class="com.epam.test.TestOne"/>
        <method signature="TestOne.testSubtract()[pri:0, instance:com.epam.test.TestOne@59d016c9]" name="testSubtract" class="com.epam.test.TestOne"/>
      </group> <!-- positive -->
    </groups>
    <test started-at="2024-07-02T06:06:36Z" name="Test Basic One" finished-at="2024-07-02T06:06:36Z" duration-ms="452">
      <class name="com.epam.test.TestOne">
        <test-method is-config="true" signature="setUp(org.testng.ITestContext)[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="setUp" finished-at="2024-07-02T11:36:36Z" duration-ms="154" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@babafc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddition(int, int, int)[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="testAddition" data-provider="testdata" finished-at="2024-07-02T11:36:36Z" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddition -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="setUpMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="testAdd()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="testAdd" finished-at="2024-07-02T11:36:36Z" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method signature="testDivide()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="testDivide" finished-at="2024-07-02T11:36:36Z" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivide -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="setUpMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="setUpMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="afterMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="setUpMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="setUpMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="testAddition(int, int, int)[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="testAddition" data-provider="testdata" finished-at="2024-07-02T11:36:36Z" duration-ms="2" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Addition failed expected [6] but found [14]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Addition failed expected [6] but found [14]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:370)
	at com.epam.test.TestOne.testAddition(TestOne.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddition -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="setUpMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="afterMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testDivideByZero()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="testDivideByZero" finished-at="2024-07-02T11:36:36Z" duration-ms="2" status="FAIL">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Expected exception java.lang.IllegalArgumentException but got java.lang.ArithmeticException: / by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Expected exception java.lang.IllegalArgumentException but got java.lang.ArithmeticException: / by zero
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.testng.TestException: 
Expected exception java.lang.IllegalArgumentException but got java.lang.ArithmeticException: / by zero
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 5 more
Caused by: java.lang.ArithmeticException: / by zero
	at com.epam.test.TestOne.testDivideByZero(TestOne.java:123)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	... 7 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivideByZero -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="afterMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testMultiply()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="testMultiply" finished-at="2024-07-02T11:36:36Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiply -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="setUpMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="afterMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testSquareRoot()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="testSquareRoot" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSquareRoot -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="setUpMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="testSquareRootWithNegativeVal()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="testSquareRootWithNegativeVal" finished-at="2024-07-02T11:36:36Z" duration-ms="2" status="FAIL">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Expected exception java.lang.IllegalArgumentException but got java.lang.AssertionError: expected [NaN] but found [-7]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.IllegalArgumentException but got org.testng.TestException: 
Expected exception java.lang.IllegalArgumentException but got java.lang.AssertionError: expected [NaN] but found [-7]
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.testng.TestException: 
Expected exception java.lang.IllegalArgumentException but got java.lang.AssertionError: expected [NaN] but found [-7]
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 5 more
Caused by: java.lang.AssertionError: expected [NaN] but found [-7]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at com.epam.test.TestOne.testSquareRootWithNegativeVal(TestOne.java:145)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	... 7 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSquareRootWithNegativeVal -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="afterMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testSubtract()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="testSubtract" finished-at="2024-07-02T11:36:36Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubtract -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="afterMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="setUpMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="afterMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="afterMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="afterMethod" finished-at="2024-07-02T11:36:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.epam.test.TestOne@59d016c9]" started-at="2024-07-02T11:36:36Z" name="tearDown" finished-at="2024-07-02T11:36:36Z" duration-ms="260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.epam.test.TestOne -->
    </test> <!-- Test Basic One -->
  </suite> <!-- Practice Suite -->
</testng-results>
